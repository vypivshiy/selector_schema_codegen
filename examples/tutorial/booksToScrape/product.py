# autogenerated by ssc-gen DO NOT_EDIT

from typing import Dict, Union


from bs4 import BeautifulSoup, ResultSet, Tag  # noqa (for typing)

T_ProductDescription = Dict[str, str]


class ProductDescription:
    """parse product description from product page

        USAGE:
            - GET https://books.toscrape.com/catalogue/in-her-wake_980/index.html
            - from catalogue page send GET request by key []books['url']


    {
        "UPC": "String",
        "Product Type": "Books",
        "Price (excl. tax)": "String",
        "Price (incl. tax)": "String",
        "Tax": "String",
        "Availability": "In stock (<count>)",
        "Number of reviews": "0 (always, its fiction shop lol)"
    }"""

    def __init__(self, document: Union[bytes, str, BeautifulSoup, Tag]) -> None:
        self._document = (
            BeautifulSoup(document, "lxml")
            if isinstance(document, (str, bytes))
            else document
        )

    def _split_doc(self, v: Union[BeautifulSoup, Tag]) -> ResultSet:
        
        return v.select("table tr")

    def _parse_key(self, v: Union[BeautifulSoup, Tag]) -> str:
        v0 = v.select_one("th")
        
        return v0.text

    def _parse_value(self, v: Union[BeautifulSoup, Tag]) -> str:
        v0 = v.select_one("td")
        
        return v0.text

    def parse(self) -> T_ProductDescription:
        return {
            self._parse_key(el): self._parse_value(el)
            for el in self._split_doc(self._document)
        }
