# meta information
id: books.to_scrape
info:
  name: books.to_scrape
  author: username
  description: books.to_scrape schema
  source: source_link
  tags: shop, books


UselessElements:
  doc: |
    useless elements extractor
  steps:
    parser:
      - name: title
        doc: a title page
        run: |
          css "title"
          text
      - name: meta
        doc: all meta elements tags
        run: |
          css "head > meta"
          raw
      - name: hrefs
        doc: all a [href] elements
        run: |
          cssAll "a"
          attr "href"
    view:
      - title
      - meta
      - hrefs

# class name
Book:
  # optional class docstrings
  doc: |
    example book object parser
  # init steps
  steps:
    # optional first pre-validation
    validate: |
      css "div > a"
      attr "href"
      assertMatch "cyka cyka.jpg"
      noRet
    # split html document to parts
    split: |
      cssAll "ol.row > li"
    parser:
      - name: url
        # optional key alias for view
        # alias: page
        # optional documentation key
        doc: page url to book
        alias: url_page
        # parse steps procedure
        run: |
          css "div.image_container > a"
          attr "href"
          format "https://books.toscrape.com/catalogue/{{}}"
      - name: image
        doc: book image
        run: |
          css "div.image_container > a > img"
          attr "src"
      - name: price
        doc: book price
        run: |
          default "0"
          css "div.product_price > p.price_color"
          text
      - name: name
        doc: book name
        run: |
          css "h3 > a"
          attr "title"
      - name: available
        doc: in stock?
        run: |
          css "div.product_price > p.availability > i"
          attr "class"
      - name: rating
        doc: book rating
        run: |
          css "p.star-rating"
          attr "class"
          lstrip "star-rating "
    # how to represent schema output
    view:
      - url
      - image
      - price
      - name
      - rating
